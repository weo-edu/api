{
  "name": "routification",
  "description": "Turn a connect app into a router",
  "version": "0.0.1",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/expressjs/routification.git"
  },
  "bugs": {
    "url": "https://github.com/expressjs/routification/issues"
  },
  "dependencies": {
    "path-to-regexp": "*",
    "methods": "*"
  },
  "peerDependencies": {
    "connect": "*"
  },
  "devDependencies": {
    "connect": "*",
    "mocha": "*",
    "should": "*",
    "supertest": "*"
  },
  "scripts": {
    "test": "make test;"
  },
  "readme": "# Routification [![Build Status](https://travis-ci.org/expressjs/routification.png)](https://travis-ci.org/expressjs/routification)\n\nTurn any connect app into an Express-like router.\nIn the future, Express will be a Routification instance.\nUnlike Express 3.0, each route is its own middleware.\nYou will probably see a very insigificant performance drop,\nbut there's no more implicit `app.use(app.router)` you have to worry about.\n\nRoutification is built on [path-to-regexp](https://github.com/component/path-to-regexp).\nIf you have any issues with path matching,\nplease open an issue in that repository instead.\n\nRoutification assumes you've `npm install connect` yourself.\nIt does not rely on `connect` itself.\n\n## API\n\n### var app = routification([app], [options])\n\n`app` is an optional `connect` instance.\n`options` are passed to [path-to-regexp](https://github.com/component/path-to-regexp#pathtoregexppath-keys-options).\n\n```js\nvar routify = require('routification')\nvar app = routify()\nvar app = routify(connect())\nvar app = routify({\n  sensitive: true\n})\nvar app = routify(connect(), {\n  sensitive: true\n})\n```\n\n### app[VERB](path || regexp, middleware...)\n\nVerb can be any HTTP method supported by node.\n`delete` is also aliased as `del`.\nEach `middleware` should have a signature of `(req, res)` or `(req, res, next)`.\n\nNote: if the request method is `HEAD`,\nit will also match any `GET` routes as well.\nTo match `HEAD` and not `GET`,\ndo `app.head()` before any `app.get()`.\n\n### app[all](path || regexp, middleware...)\n\nWill match any request with the given path or regexp.\n\n### License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Jonathan Ong me@jongleberry.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/expressjs/routification",
  "_id": "routification@0.0.1",
  "dist": {
    "shasum": "9cd771ec74f2aafebba07bfe61d6aea8cc5ecf3d"
  },
  "_from": "routification@",
  "_resolved": "https://registry.npmjs.org/routification/-/routification-0.0.1.tgz"
}
