{
  "name": "debug-trace",
  "version": "0.2.2",
  "description": "Adds a handy `trace` flag to the console object to prepend the file and line number",
  "main": "./debug-trace",
  "dependencies": {
    "callsite": "~1.0.0",
    "moment": "~2.1.0"
  },
  "readme": "# debug-trace\n\nThis fork of console-trace adds the following features:\n * work with callsite >= version 1.0.0\n * work with https://github.com/visionmedia/debug \n (and print the caller of debug instead of console)\n * provide an easy to override formatting function `console.format` e.g.:\n\n```javascript\n  // overridable console string prefix formatting function\n  console.format = function(c) {\n    return c.date + \": \" +  c.method + \" [\" + c.filename + \":\" + c.getLineNumber() + \"] \" + c.functionName;\n  }\n```\n\nAvailable options from V8 JavaScript stack trace API\nhttps://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n\n * getThis: returns the value of this\n * getTypeName: returns the type of this as a string. This is the name of the function stored in the constructor field of this, if available, otherwise the object's [[Class]] internal property.\n * getFunction: returns the current function\n * getFunctionName: returns the name of the current function, typically its name property. If a name property is not available an attempt will be made to try to infer a name from the function's context.\n * getMethodName: returns the name of the property of this or one of its prototypes that holds the current function\n * getFileName: if this function was defined in a script returns the name of the script\n * getLineNumber: if this function was defined in a script returns the current line number\n * getColumnNumber: if this function was defined in a script returns the current column number\n * getEvalOrigin: if this function was created using a call to eval returns a CallSite object representing the location where eval was called\n * isToplevel: is this a toplevel invocation, that is, is this the global object?\n * isEval: does this call take place in code defined by a call to eval?\n * isNative: is this call in native V8 code?\n * isConstructor: is this a constructor call?\n\nAdded options\n  * filename = getFileName without the base path: console.traceOptions.cwd\n  * method = console method name like `log`, `error` ect.\n  * functionName = call.getFunctionName() || 'anonymous'\n  * date = actual date formatted with moment().format(console.traceOptions.dateFormat)\n\nExtends the native Node.JS `console` object to prefix logging functions\nwith the [CallSite](http://github.com/visionmedia/callsite) information.\n\nTo read more about runtime stack trace introspection you can refer to [this\narticle](http://www.devthought.com/2011/12/22/a-string-is-not-an-error/#beyond).\n\n![](http://f.cl.ly/items/1T2K0H0i2H2J0C3q3H2u/console-trace.png)\n\n## Installation\n\n    $ npm install debug-trace\n\n### Syntax:\n\n```javascript\nrequire('debug-trace')([options])\n```\n\n### Available Options:\n\n* __always__ - (`Boolean`: defaults to false) always print the callsite info even without accessing methods from the `t` or `traced` getters.\n* __cwd__ - (`String`: defaults to `process.cwd()`) the path that will be stripped from the callsite info\n* __colors__ - (`Boolean|Object`: defaults to `undefined`) terminal colors support flag or a custom color object\n* __right__ - (`Boolean`: defaults to false) callsite alignment flag, when true prints infos on the right\n* __dateFormat__ - (`String`: defaults to 'YYYY.MM.DD HH:mm:ss.SSS') date time format with `moment().format(...)`\n\n### Examples:\n\n```javascript\nrequire('debug-trace')\n```\n\nYou can add the `t` or `traced` getter to your calls to obtain a stacktrace:\n\n```javascript\nconsole.t.log('a');\nconsole.traced.log('a');\n```\n\nYou can also make every console call trace:\n\n```javascript\nrequire('debug-trace')({\n  always: true,\n})\n\n...\n\nconsole.log('a');     // tracing\nconsole.error('a');   // tracing\n```\n\nYou can align the callsite infos to the right\n\n```javascript\nrequire('debug-trace')({\n  always: true,\n  right: true\n})\n\n...\n\nconsole.log('a');     // tracing right\nconsole.error('a');   // tracing right\n```\n\nYou can change defaults colors too\n\n```javascript\nrequire('./debug-trace')({\n  always: true,\n  colors: {\n    warn: '35',\n    info: '32'\n  }\n})\n\n...\n\nconsole.warn('a');    // magenta\nconsole.info('a');    // green\n```\n\nTo customize the string that's prefixed to the calls, override the\n`console.traceFormat` function.\n\n## Beyond console\n\nIf you have more sophisticated logging needs, or don't wish to extend\n`console`, I suggest you look at [tracer](https://github.com/baryon/tracer).\n\n## Credits\nI only added some functionality to the original console-trace:\n\n  * [Guillermo Rauch](https://github.com/guille)\n  * [Kilian Ciuffolo](https://github.com/kilianc)\n  * [Nicholas Manousos](https://github.com/nmanousos)  \n\n## License \n\n(The MIT License)\n\nCopyright (c) 2012 Guillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "README.md",
  "_id": "debug-trace@0.2.2",
  "_from": "debug-trace@^0.2.2"
}
