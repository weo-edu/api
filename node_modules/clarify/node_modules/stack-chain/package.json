{
  "name": "stack-chain",
  "description": "API for combining call site modifiers",
  "version": "1.0.0",
  "author": {
    "name": "Andreas Madsen",
    "email": "amwebdk@gmail.com"
  },
  "main": "./stack-chain.js",
  "scripts": {
    "test": "tap ./test/simple"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/AndreasMadsen/stack-chain.git"
  },
  "keywords": [
    "stack",
    "chain",
    "trace",
    "call site",
    "concat",
    "format"
  ],
  "devDependencies": {
    "tap": "0.4.x"
  },
  "license": "MIT",
  "engines": {
    "node": "0.10 || 0.11 || 0.12"
  },
  "readme": "#stack-chain [![Build Status](https://secure.travis-ci.org/AndreasMadsen/stack-chain.png)](http://travis-ci.org/AndreasMadsen/stack-chain)\n\n> API for combining call site modifyers\n\n## Installation\n\n```sheel\nnpm install stack-chain\n```\n## API documentation\n\n```JavaScript\nvar chain = require('stack-chain');\n```\n\nWhen the `Error.stack` getter is executed, the `stack-chain` will perform the\nfollowing:\n\n1. execute the `modifiers` attach by `chain.extend`.\n2. execute the `modifiers` attach by `chain.filter`.\n3. execute the `formater` set by `chain.format.replace`.\n\n### chain.extend.attach(modifier)\n### chain.filter.attach(modifier)\n\nWill modify the callSite array. Note you shouldn't format the stack trace.\n\nThe `modifier` is a function there takes two arguments `error` and `frames`.\n\n* `error` is the `Error` object.\n* `frames` is an array of `callSite` objects, see\n  [v8 documentation](http://code.google.com/p/v8/wiki/JavaScriptStackTraceApi)\n  for details.\n\nWhen the `modifier` is done, it should `return` a modified `frames` array.\n\n```JavaScript\nchain.filter.attach(function (error, frames) {\n\n    // Filter out traces related to this file\n    var rewrite = frames.filter(function (callSite) {\n      return (callSite[i].getFileName()[0] !== module.filename);\n    });\n\n    return rewrite;\n});\n```\n\n### chain.extend.deattach(modifier)\n### chain.filter.deattach(modifier)\n\nRemoves a `modifier` function from the list of `modifiers`.\n\n```JavaScript\nvar modifier = function () {};\n\n// Attach modifier function\nchain.extend.attach(modifier);\n\n// Deattach modifier function\nchain.extend.deattach(modifier);\n```\n\n### chain.format.replace(formater)\n\nReplaces the default v8 `formater`. The new `formater` takes a two arguments\n`error` and `frames`.\n\n* `error` is the `Error` object.\n* `callSites` is an array of `callSite` objects, see\n  [v8 documentation](http://code.google.com/p/v8/wiki/JavaScriptStackTraceApi)\n  for details.\n\nWhen the `formater` is done, it should `return` a `string`. The `string` will\nwhat `Error.stack` returns.\n\n```JavaScript\nchain.format.replace(function (error, frames) {\n  var lines = [];\n\n  lines.push(error.toString());\n\n  for (var i = 0; i < frames.length; i++) {\n    lines.push(\"    at \" + frames[i].toString());\n  }\n\n  return lines.join(\"\\n\");\n});\n```\n\n### chain.format.restore()\n\nWill restore the default v8 `formater`. Note that dude to the nature of v8\n`Error` objects, if one of the getters `Error.stack` or `Error.callSite` has\nalready executed, the value of `Error.stack` won't change.\n\n### Error.callSite\n\nReturns the original `callSite` array.\n\n## License\n\n**The software is license under \"MIT\"**\n\n> Copyright (c) 2012 Andreas Madsen\n>\n> Permission is hereby granted, free of charge, to any person obtaining a copy\n> of this software and associated documentation files (the \"Software\"), to deal\n> in the Software without restriction, including without limitation the rights\n> to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n> copies of the Software, and to permit persons to whom the Software is\n> furnished to do so, subject to the following conditions:\n>\n> The above copyright notice and this permission notice shall be included in\n> all copies or substantial portions of the Software.\n>\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n> IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n> FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n> AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n> LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n> OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n> THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/AndreasMadsen/stack-chain/issues"
  },
  "homepage": "https://github.com/AndreasMadsen/stack-chain",
  "_id": "stack-chain@1.0.0",
  "_from": "stack-chain@1.0.x"
}
